const db=require("../database");class CursoService{static obtenerTodosLosCursos(){return new Promise((resolve,reject)=>{db.all("SELECT * FROM cursos",[],(err,rows)=>{if(err){reject(err)}else{resolve(rows)}})})}static obtenerCursoPorId(id){return new Promise((resolve,reject)=>{db.get("SELECT * FROM cursos WHERE id = ?",[id],(err,row)=>{if(err){reject(err)}else{resolve(row)}})})}static agregarCurso(nuevoCurso){const{nombre:nombre,creditos:creditos,docente:docente}=nuevoCurso;return new Promise((resolve,reject)=>{db.run("INSERT INTO cursos (nombre, creditos, docente) VALUES (?, ?, ?)",[nombre,creditos,docente],function(err){if(err){reject(err)}else{resolve({id:this.lastID,...nuevoCurso})}})})}static actualizarCurso(id,cursoActualizado){const{nombre:nombre,creditos:creditos,docente:docente}=cursoActualizado;return new Promise((resolve,reject)=>{db.run("UPDATE cursos SET nombre = ?, creditos = ?, docente = ? WHERE id = ?",[nombre,creditos,docente,id],function(err){if(err){reject(err)}else if(this.changes===0){resolve(null)}else{resolve({id:parseInt(id),...cursoActualizado})}})})}static eliminarCurso(id){return new Promise((resolve,reject)=>{db.run("DELETE FROM cursos WHERE id = ?",[id],function(err){if(err){reject(err)}else if(this.changes===0){resolve(null)}else{resolve({id:parseInt(id)})}})})}}module.exports=CursoService;